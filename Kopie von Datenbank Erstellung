{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNwRpTcLpbdgHD6Lvon3P6V"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SboLSSZcxqAF","executionInfo":{"status":"ok","timestamp":1737446650552,"user_tz":-60,"elapsed":2891,"user":{"displayName":"Benny Bucher","userId":"11489734840240526900"}},"outputId":"0c510be0-0156-4a8b-b5d7-10871632be13"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","careplans.csv\t devices.csv\t  imaging_studies.csv\tobservations.csv   payers.csv\n","careplans.xlsx\t disease.csv\t  imaging_studies.xlsx\tobservations.xlsx  payer_transitions.csv\n","conditions.csv\t disease.xlsx\t  immunizations.csv\torganizations.csv  procedures.csv\n","conditions.xlsx  encounters.csv   medications.csv\tpatients.csv\t   providers.csv\n","covid19_test.db  encounters.xlsx  medications.xlsx\tpatients.xlsx\t   supplies.csv\n","Lade Daten aus /content/drive/MyDrive/Gruppe A/COVID 19 data/observations.csv...\n","Importiere Daten in die Tabelle observations...\n","Lade Daten aus /content/drive/MyDrive/Gruppe A/COVID 19 data/patients.csv...\n","Importiere Daten in die Tabelle patients...\n","Lade Daten aus /content/drive/MyDrive/Gruppe A/COVID 19 data/conditions.csv...\n","Importiere Daten in die Tabelle conditions...\n","Die Daten wurden erfolgreich in die Datenbank covid19_data.db importiert.\n"]}],"source":["import sqlite3\n","from sqlite3 import Error\n","import pandas as pd\n","\n","# Google Drive mounten\n","from google.colab import drive\n","drive.mount(\"/content/drive\")\n","\n","# Verzeichnis mit den CSV-Dateien\n","material_path = \"/content/drive/MyDrive/Gruppe A/COVID 19 data\"\n","!ls \"{material_path}\"\n","\n","# CSV-Dateien und zugehörige Tabellennamen\n","csv_files = {\n","    f\"{material_path}/observations.csv\": \"observations\",\n","    f\"{material_path}/patients.csv\": \"patients\",\n","    f\"{material_path}/conditions.csv\": \"conditions\"\n","}\n","\n","# Name der SQLite-Datenbank\n","database_file = \"covid19_data.db\"\n","\n","try:\n","    # Verbindung zur SQLite-Datenbank herstellen (wird erstellt, falls nicht vorhanden)\n","    conn = sqlite3.connect(database_file)\n","    cursor = conn.cursor()\n","\n","    # Fremdschlüssel aktivieren\n","    cursor.execute(\"PRAGMA foreign_keys = ON;\")\n","\n","    # SQL-Tabellenerstellungsbefehle\n","    table_creation_queries = {\n","        \"observations\": \"\"\"\n","            CREATE TABLE IF NOT EXISTS observations (\n","                DATE TEXT,\n","                PATIENT TEXT,\n","                ENCOUNTER TEXT,\n","                CODE TEXT,\n","                DESCRIPTION TEXT,\n","                VALUE REAL,\n","                UNITS TEXT,\n","                TYPE TEXT,\n","                FOREIGN KEY (PATIENT) REFERENCES patients (Id)\n","            );\n","        \"\"\",\n","        \"patients\": \"\"\"\n","            CREATE TABLE IF NOT EXISTS patients (\n","                Id TEXT PRIMARY KEY,\n","                BIRTHDATE TEXT,\n","                DEATHDATE TEXT,\n","                SSN TEXT,\n","                DRIVERS TEXT,\n","                PASSPORT TEXT,\n","                PREFIX TEXT,\n","                FIRST TEXT,\n","                LAST TEXT,\n","                SUFFIX TEXT,\n","                MAIDEN TEXT,\n","                MARITAL TEXT,\n","                RACE TEXT,\n","                ETHNICITY TEXT,\n","                GENDER TEXT,\n","                BIRTHPLACE TEXT,\n","                ADDRESS TEXT,\n","                CITY TEXT,\n","                STATE TEXT,\n","                COUNTY TEXT,\n","                ZIP TEXT,\n","                LAT REAL,\n","                LON REAL,\n","                HEALTHCARE_EXPENSES REAL,\n","                HEALTHCARE_COVERAGE REAL\n","            );\n","        \"\"\",\n","        \"conditions\": \"\"\"\n","            CREATE TABLE IF NOT EXISTS conditions (\n","                START TEXT,\n","                STOP TEXT,\n","                PATIENT TEXT,\n","                ENCOUNTER TEXT,\n","                CODE TEXT,\n","                DESCRIPTION TEXT,\n","                FOREIGN KEY (PATIENT) REFERENCES patients (Id)\n","            );\n","        \"\"\"\n","    }\n","\n","    # Tabellen erstellen und Daten importieren\n","    for csv_file, table_name in csv_files.items():\n","        # Tabelle erstellen\n","        cursor.execute(table_creation_queries[table_name])\n","        conn.commit()\n","\n","        # CSV-Datei mit pandas laden\n","        print(f\"Lade Daten aus {csv_file}...\")\n","        df = pd.read_csv(csv_file)\n","\n","        # Daten in die Tabelle einfügen\n","        print(f\"Importiere Daten in die Tabelle {table_name}...\")\n","        df.to_sql(table_name, conn, if_exists=\"replace\", index=False)\n","\n","    print(f\"Die Daten wurden erfolgreich in die Datenbank {database_file} importiert.\")\n","\n","except Error as e:\n","    print(f\"Ein Fehler ist aufgetreten: {e}\")\n","\n","finally:\n","    # Verbindung schließen\n","    if conn:\n","        conn.close()\n"]}]}